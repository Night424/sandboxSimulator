const fs = require('fs');
const path = require('path');

// Paths
const virusPath = __filename;
const startupPath = path.join(__dirname, '..', 'startup', 'fakevirus.js');
const hiddenFilePath = path.join(__dirname, '..', 'malware', '.hidden.txt');
const registryPath = path.join(__dirname, '..', 'registry.json');

// 1. Copy to Startup Folder
function copyToStartup() {
  fs.copyFileSync(virusPath, startupPath);
  console.log('[+] Copied to startup folder.');
}

// 2. Create a Hidden File
function createHiddenFile() {
  fs.writeFileSync(hiddenFilePath, 'This is a hidden file.');
  console.log('[+] Hidden file created.');
}

// 3. Simulated Registry Entry
function writeToRegistry() {
  let registry = {};

  if (fs.existsSync(registryPath)) {
    registry = JSON.parse(fs.readFileSync(registryPath, 'utf-8'));
  }

  registry['HKCU\\Software\\FakeVirus'] = {
    installed: true,
    path: startupPath,
    timestamp: new Date().toISOString()
  };

  fs.writeFileSync(registryPath, JSON.stringify(registry, null, 2));
  console.log('[+] Registry key written.');
}

// 4. Dummy Payload
function dummyPayload() {
  let count = 5;
  const interval = setInterval(() => {
    console.log(`Fake payload executing in ${count}...`);
    count--;
    if (count < 0) {
      clearInterval(interval);
      console.log('[!] BOOM! (just kidding, nothing happened.)');
    }
  }, 1000);
}

// Run All
function main() {
  copyToStartup();
  createHiddenFile();
  writeToRegistry();
  dummyPayload();
}

main();
